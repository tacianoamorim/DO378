# datasource configuration
%dev.quarkus.datasource.url = jdbc:postgresql://localhost:5432/conference
%dev.quarkus.http.port=8081
%test.quarkus.datasource.url = jdbc:postgresql://localhost:5432/conference
quarkus.datasource.url = jdbc:postgresql://postgresql:5432/conference
quarkus.datasource.driver = org.postgresql.Driver

quarkus.datasource.username = conference_user
quarkus.datasource.password = confi_user

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQL10Dialect
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script=META-INF/import-test.sql
quarkus.http.cors=true

# Intraservice comms
org.acme.conference.session.SpeakerService/mp-rest/url=https://localhost:8444
org.acme.conference.session.SpeakerService/mp-rest/trustStore=../microservice-session.truststore
org.acme.conference.session.SpeakerService/mp-rest/trustStorePassword=redhat
org.acme.conference.session.SpeakerService/mp-rest/keyStore=../microservice-session.keystore
org.acme.conference.session.SpeakerService/mp-rest/keyStorePassword=redhat

%prod.org.acme.conference.session.SpeakerService/mp-rest/url=https://speaker:8444


# Feature toggles
features.session-integration=true


# Configure HTTPS with keystore.
quarkus.http.ssl-port=8445
quarkus.http.ssl.certificate.key-store-file=../microservice-session.keystore
quarkus.http.ssl.certificate.key-store-password=redhat
# mTLS configuration
quarkus.http.ssl.certificate.trust-store-file=../microservice-session.truststore
quarkus.http.ssl.certificate.trust-store-password=redhat

# Authentication
mp.jwt.verify.publickey.location=pki/public.key
